# Default image is VS 2015, but a newer one is specified here
image: Visual Studio 2022

environment:
  global:
    # disable MSVC static analyzer for now because this still has unfixed
    # warnings with VS 2022
    PG_MSVC_ANALYZE: "1"

    SDL_VIDEODRIVER: "dummy"
    SDL_AUDIODRIVER: "disk"
    PYTHONIOENCODING: "UTF-8"
    TWINE_USERNAME: pygameci
    TWINE_PASSWORD:
      secure: FtHM0I+wubit/UWOzHsykHayL06KImKRZQznRUHUfzM=

    # load pip config from this file. Define this in 'CIBW_ENVIRONMENT'
    # because this should not affect cibuildwheel machinery
    # also define environment variables needed for testing
    CIBW_ENVIRONMENT: PIP_CONFIG_FILE="buildconfig\\pip_config.ini"

    # build all possible combinations
    CIBW_BUILD: cp* pp*

    # command that runs before all builds
    CIBW_BEFORE_ALL: python -m pip install Sphinx && python setup.py docs

    # clean setup file before each new build, because x64 and x86 setup files
    # are not inter-compatible
    CIBW_BEFORE_BUILD: del Setup

    CIBW_TEST_COMMAND: python -m pygame.tests -v --exclude opengl,music,timing --time_out 300

    # Increase pip debugging output
    CIBW_BUILD_VERBOSITY: 2

# using python/pip from command line should pick up 64-bit python 3.10
init:
- cmd: set PATH=C:\Python310-x64;C:\Python310-x64\Scripts;%PATH%

install: python -m pip install cibuildwheel==2.5.0

build_script: python -m cibuildwheel --output-dir wheelhouse

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

artifacts:
  - path: "wheelhouse\\*.whl"
    name: pypiartifacts

# For uploading releases to github.
# https://www.appveyor.com/docs/deployment/github/
deploy:
  - provider: GitHub
    auth_token:
      secure: lPFSARNb+pYeLKJUzLfSZ9OcSw74R/0vvAjYAkj7OcXOooeHIhIWjNoYDlXZL6hs # your encrypted token from GitHub
    artifact: pypiartifacts
    draft: true
    prerelease: false
    force_update: true
    on:
      # branch: master               # release from master branch only
      APPVEYOR_REPO_TAG: true        # deploy on tag push only

on_success:
  - cmd: "if [%APPVEYOR_REPO_TAG%]==[true] python -m pip install twine && python -m twine upload wheelhouse\\*.whl"
